---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
        - name: Get common-static distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
            timeout: 300
          with_items: "{{ common_static }}"
        - name: get clickhouse GPG-key
          ansible.builtin.get_url:
            url: "https://repo.clickhouse.com/CLICKHOUSE-KEY.GPG"
            dest: "./CLICKHOUSE-KEY.GPG"
        - name: Import ClickHouse GPG key
          become: true
          ansible.builtin.command:
            cmd: "rpm --import CLICKHOUSE-KEY.GPG"
      #rescue:
      #  - name: Get clickhouse distrib
      #    ansible.builtin.get_url:
      #      url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
      #      dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"

    - name: Check if ClickHouse packages are installed
      ansible.builtin.shell:
        cmd: "rpm -q clickhouse-common-static clickhouse-client clickhouse-server"
      register: clickhouse_packages_status
      changed_when: false

    - name: Install clickhouse packages
      become: true
      ansible.builtin.command: >
        yum install -y --nogpgcheck
        clickhouse-common-static-{{ clickhouse_version }}.rpm
        clickhouse-client-{{ clickhouse_version }}.rpm
        clickhouse-server-{{ clickhouse_version }}.rpm
      when: clickhouse_packages_status.rc != 0
      #ansible.builtin.yum:
      #  name:
      #    - clickhouse-common-static-{{ clickhouse_version }}.rpm
      #    - clickhouse-client-{{ clickhouse_version }}.rpm
      #    - clickhouse-server-{{ clickhouse_version }}.rpm
      #  extra_args: "--nogpgcheck"
      notify: Start clickhouse service
    - name: Flush handlers
      meta: flush_handlers
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  become: true
  handlers:
    - name: Restart Vector
      ansible.builtin.service:
        name: vector
        state: restarted

  tasks:
    - name: Get Vector distrib
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-1.x86_64.rpm"
        dest: "./vector-{{ vector_version }}.rpm"

    - name: Check if Vector package is installed
      ansible.builtin.shell:
        cmd: "rpm -q vector"
      register: vector_package_status
      changed_when: false

    - name: Install Vector
      become: true
      ansible.builtin.command: >
        yum install -y --nogpgcheck
        vector-{{ vector_version }}.rpm
      when: vector_package_status.rc != 0

    - name: Configure Vector
      become: true
      ansible.builtin.template:
        src: "./templates/vector.yaml.j2"
        dest: "./vector.yaml"
        owner: root
        group: root
        mode: 0644
      notify: Restart Vector

- name: Install Nginx
  hosts: lighthouse
  become: true
  handlers:
    - name: Restart nginx
      become: true
      ansible.builtin.service:
        name: nginx
        state: restarted

  tasks:

    - name: Update system packages
      become: true
      ansible.builtin.yum:
        name: '*'
        state: latest

    - name: Install EPEL release
      become: true
      ansible.builtin.yum:
        name: epel-release
        state: present

    - name: Installing Nginx
      become: true
      ansible.builtin.yum:
        name: nginx
        state: present

    - name: Configure Nginx
      become: true
      ansible.builtin.template:
        src:  "./templates/nginx.conf.j2"
        dest: "/etc/nginx/nginx.conf"
        mode: 0644
      notify: Restart nginx

- name: Install Lighthouse
  hosts: lighthouse
  become: true
  handlers:
    - name: Restart nginx
      become: true
      ansible.builtin.service:
        name: nginx
        state: restarted

  tasks:
    - name: Installing git for lighthouse
      become: true
      ansible.builtin.yum:
        name: git
        state: present

    - name: Copy lighthouse from git
      git:
        repo: "{{ lighthouse_git }}"
        version: master
        dest: "{{ lighthouse_dest }}"

    - name: Configuring lighthouse
      become: true
      ansible.builtin.template:
        src:  "./templates/lighthouse.conf.j2"
        dest: "/etc/nginx/conf.d/default.conf"
        mode: 0644
      notify: Restart nginx
